#!/usr/bin/env ruby
#MIT License
#Copyright (c) 2018 phR0ze
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

begin
  require 'nub'
rescue Exception => e
  puts("Error: missing package '#{e.message.split(' ').last.sub('/', '-')}'")
  !puts("Error: install missing packages with 'bundle install --system") and exit
end
Log.die("Must be root to execute") if not User.root?

app = 'nsctl'
version = '0.0.1'
examples = "Create Namespace: sudo ./#{app} create ts enp+\n".colorize(:green)
examples += "Destroy Namespace: sudo ./#{app} destroy ts enp+\n".colorize(:green)

cmdr = Commander.new(app:app, version:version, examples:examples)
cmdr.add('create', 'Create namespace', nodes:[
  Option.new(nil, "Namespace name to create", required:true),
  Option.new(nil, "NIC to NAT the new namespace to", required:true),
], examples: "Create Namespace: sudo ./#{app} create ts enp+\n".colorize(:green))
cmdr.add('destroy', 'Destroy namespace', nodes:[
  Option.new(nil, "Namespace name to destroy", required:true),
], examples: "Destroy Namespace: sudo ./#{app} destroy ts\n".colorize(:green))
cmdr.parse!

if cmdr[:create]
  ns = cmdr[:create][:create0]
  nic = cmdr[:create][:create1]
  host_veth = Net::Veth.new("#{ns}_veth1", "192.168.100.1")
  guest_veth = Net::Veth.new("veth2", "192.168.100.2")
  network = Net::Network.new("192.168.100.0", "24", nic)
  if cmd == "isolate"
    Net.create_namespace(ns, host_veth, guest_veth, network)
    Net.namespace_connectivity?(ns, "google.com")
elsif cmdr[:destroy]
  Net.delete_namespace(cmdr[:destroy][:destroy0])
end

# vim: ft=ruby:ts=2:sw=2:sts=2
